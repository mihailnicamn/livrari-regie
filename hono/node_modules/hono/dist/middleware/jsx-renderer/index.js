// src/middleware/jsx-renderer/index.ts
import { jsx, createContext, useContext } from "../../jsx/index.js";
var RequestContext = createContext(null);
var createRenderer = (c, component, options) => (children, props) => {
  const docType = typeof options?.docType === "string" ? options.docType : options?.docType === true ? "<!DOCTYPE html>" : "";
  return c.html(
    docType + jsx(
      RequestContext.Provider,
      { value: c },
      component ? component({ children, ...props || {} }) : children
    )
  );
};
var jsxRenderer = (component, options) => (c, next) => {
  c.setRenderer(createRenderer(c, component, options));
  return next();
};
var useRequestContext = () => {
  const c = useContext(RequestContext);
  if (!c) {
    throw new Error("RequestContext is not provided.");
  }
  return c;
};
export {
  RequestContext,
  jsxRenderer,
  useRequestContext
};
